services:
  postgres:
    image: postgres:alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shop-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d online_shop_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  online-shop:
    image: "ivankus197/online-shop:v1"
    container_name: online-shop
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
     SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
     SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
     SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - shop-network
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s

volumes:
  postgres_data:

networks:
  shop-network: